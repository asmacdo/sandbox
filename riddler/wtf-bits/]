import math

import pygame


BLUE = (0, 0, 255)
RED = (255, 0, 0)



class Bit:
    def __init__(self, chart_size, x, y):
        self.chart_size = chart_size
        self._x = x
        self._y = y

    @property
    def x(self):
        return self._x

    @property
    def y(self):
        return self.chart_size[1] - 1 - self._y

    def draw(self, color, screen):
        screen_size = screen.get_size()
        stretch_x = screen_size[0] // self.chart_size[0]
        stretch_y = screen_size[1] // self.chart_size[1]
        x = self.x * stretch_x
        y = self.y * stretch_y
        this_bit = pygame.Rect(
            (x, y , stretch_x, stretch_y)
        )
        pygame.draw.rect(
            screen,
            color,
            this_bit
        )


def run():
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False


def main():
    chart_size = (101, 101)
    size_modifier = 5
    display_size = [dimension * size_modifier for dimension in chart_size]
    screen = pygame.display.set_mode(display_size)

    manual_row_0(chart_size)
    pygame.display.flip()
    run()

def manual_row_0(chart_size):
    for x in range(chart_size[0]):
        import ipdb; ipdb.set_trace()
        bit = Bit(chart_size, x, 0)
        bit.draw(BLUE, screen)

main()

